- set_fact:
    lab_name: "{{ inventory_hostname }}"

- debug:
    msg: "Starting setup for {{ lab_name }}..."

- name: Setup user
  delegate_to: localhost
  user:
    name: "{{ lab_name }}"
    lab_password: "{{ lab_password }}"
    generate_ssh_key: yes
  tags:
    - user
    - ssh

- name: Get Kubespray
  git:
    repo: https://github.com/kubernetes-sigs/kubespray.git
    version: "{{ kubespray_version }}"
    dest: "/home/{{ lab_name }}/kubespray"
  delegate_to: localhost
  tags:
    - git

- name: Template the terraform.tfvars
  delegate_to: localhost
  template:
    src: cluster.tfvars.j2
    dest: "/home/{{ lab_name }}/cluster.tfvars"

- name: Run terraform
  delegate_to: localhost
  terraform:
    project_path: "/home/{{ lab_name }}/kubespray/contrib/terraform/packet"
    state: "{{ terraform_state | default('present') }}"
    force_init: true
    workspace: "{{ lab_name }}" # or state_file
    variables_file: "/home/{{ lab_name }}/cluster.tfvars"
  register: terraform
  tags:
    - terraform
    - terraform-apply

- name: Set IP facts
  set_fact:
    master_ip: "{{ terraform.outputs.k8s_masters.value | first }}"
    worker_ip: "{{ terraform.outputs.k8s_nodes.value | first }}"
  when:
    - terraform_state != 'absent'

- name: Template the inventory.ini
  delegate_to: localhost
  template:
    src: inventory.ini.j2
    dest: "/home/{{ lab_name }}/inventory.ini"
  when:
    - terraform_state != 'absent'

- name: Template the inventory.ini
  delegate_to: localhost
  template:
    src: ssh_config.j2
    dest: "/home/{{ lab_name }}/.ssh/config"
  when:
    - terraform_state != 'absent'

- name: Run Kubespray
  delegate_to: localhost
  # NOTE: Install whole cluter or just master?
  # We could dump the inventory file in the user homedir for them to run Kubespray
  # `--skip-tags download` ?
  command: "ansible-playbook -i ~/inventory.ini ~/kubespray/cluster.yml"
  become: yes
  become_user: "{{ lab_name }}"
  when:
    - terraform_state != 'absent'
  tags:
    - kubespray
